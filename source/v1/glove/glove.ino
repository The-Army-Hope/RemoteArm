/*
  Sketch generated by the Arduino IoT Cloud Thing "Glove"

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int indiceDeg;
  int palmoDeg;
  int polliceDeg;
  int polsoDeg;
  int treDitaDeg;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.

  The rest is coded by @NexIsDumb, @Matte549.
*/

#include "arduino_secrets.h"
#include "thingProperties.h"

// Potentiometer pins
const int potPinPollice = A1;  // Analogic thumb pin connected to the potentiometer               1
const int flexPinPalmo = A2;  // Analogic palm pin connected to the flex sensor                   2
const int potPinPolso = A3;  // Analogic wrist pin connected to the potentiometer                 3
const int potPinIndice = A4;  // Analogic index pin connected to the potentiometer                4
const int potPinTreDita = A5;  // Analogic conjoined-fingers pin connected to the potentiometer   5

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
    The following function allows you to obtain more information
    related to the state of network and IoT Cloud connection and errors
    the higher number the more granular information youâ€™ll get.
    The default is 0 (only errors).
    Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();

  /*
    Mapping the potentiometer sensors value to the servo range and adapting the potentiometer min and max values.
    From 0 to 1023 => The raw potentiometer rotation value.

    NOTE: The last two values are the servo's range in degrees we need based on the different arm's servos;
    this HIGHLY depends on how the servos were mounted, you might need to edit these values.
  */
  polliceDeg = map(analogRead(potPinPollice), 0, 1023, 0, 459);  //    1
  palmoDeg = map(analogRead(flexPinPalmo), 0, 1023, 90, 0); //         2
  polsoDeg = map(analogRead(potPinPolso), 0, 1023, 0, 179); //         3
  indiceDeg = map(analogRead(potPinIndice), 0, 1023, 0, 359); //       4
  treDitaDeg = map(analogRead(potPinTreDita), 0, 1023, 359, -100); //  5
}